#!/usr/bin/perl

=pod

=head1 NAME

sshgrid-do - Run a list of commands on an SSH grid 

=head1 SYNOPSIS

	$ sshgrid-do -h hosts -c commands.sh

Options:

	-h	--hosts-file		Filename pointing to list of hostnames to use for processing.
	-c	--commands-file		Filename pointing to list of commands to be executed

	-b	--base-directory	Base directory on hosts for SSHGrid management. Default: ~/.sshgrid
	-w	--worker-file		Filename for the worker script to run on the cluster nodes

	-n	--num-hosts		Restrict number of hosts to use from hosts file

	-?	--help			Display short help message
		--man			Display manpage


=head1 DESCRIPTION

sshgrid-do will take a hosts and commands file, copy the commands file and a worker script to the first host 
in the hosts list and then run the worker script in parallel on all hosts. 

=head2 Hosts files

Host files are lists of hostnames (one per file) that can be SSHed to from the machine running sshgrid-do. 
You may optionally specify a username like in a call to SSH:

	johndoe@node1.host.org
	jdoe@node2.host.org
	doejohn@node3.host.org
	node4.host.org

=head2 Command files

Lines in command files can contain any command that could be run in a bash command line, but processing of lines is
not deterministic - The worker scripts running on the cluster nodes will remove the topmost line of the script and
execute it, taking the next line as soon as they are finished, and so on, until the command file is empty.

Comments lines are allowed and are denoted by a # character as the _first_ character in the line.

=head1 EXAMPLES

Check the share/SSHGrid/examples/ directory that came in your SSHGrid distribution for sample command files and other goodies.

=head1 BUGS

Highly likely, and SSHGrid is still feature-incomplete, so check the SSHGrid issue tracker to report problems:

https://github.com/sseemayer/SSHGrid/issues

=head1 AUTHOR

Stefan Seemayer <seemayer@in.tum.de>

=cut

use strict;
use warnings;
use diagnostics;

use Getopt::Long;
use Pod::Usage;
use File::Basename;

use SSHGrid;

my ($help, $man, $hosts_file, $commands_file, $host_count);

my $base_directory = "~/.sshgrid";
my $worker_file = (fileparse(__FILE__))[1] . "../share/SSHGrid/node-bin/sshgrid-worker";

GetOptions(	
		"h|hosts-file=s"	=> \$hosts_file,
		"c|commands-file=s"	=> \$commands_file,

		"b|base-directory=s"	=> \$base_directory,
		"w|worker-file=s"	=> \$worker_file,

		"n|num-hosts=i"		=> \$host_count,

		"help|?"		=> \$help,
		"man"			=> \$man,
) or pod2usage(2);

pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

unless($hosts_file) {
	print STDERR "Must provide a hosts file!\n\n";
	pod2usage(2);
}

unless($commands_file) {
	print STDERR "Must provide a commands file!\n\n";
	pod2usage(2);
}

unless(-f $worker_file) {
	print STDERR "Cannot locate worker at $worker_file!\n\n";
	pod2usage(2);
}

my $sshg = SSHGrid->new(
	HostsSource => {FileSource => $hosts_file},
	RemoteRoot => $base_directory,
);

my $sshg_hc = $sshg->host_count();

$host_count = $host_count ? ( $sshg_hc < $host_count ? $sshg_hc : $host_count ) : $sshg_hc;

my $subdir = $sshg->get_new_subdir();


print STDERR "Uploading SSHGrid base system...\n";

# install sshgrid system
$sshg->upload(
	Filenames 	=> [$commands_file, $worker_file],
	Subdir		=> $subdir,
);

# launch worker scripts on all hosts
my $worker_name = (fileparse($worker_file))[0];
my $commands_name = (fileparse($commands_file))[0];
my $lock_name = "sshgrid.lock";
my $id_name = "sshgrid.host_ids";
my $workdir = "$base_directory/$subdir";
my $hosts = $sshg->hosts;


print STDERR "\nLaunching worker processes...\n";
for(my $hostno=0; $hostno < $host_count; $hostno++) {
	my $host = $hosts->[$hostno];
	$sshg->remote_command($host, "( cd $workdir; chmod +x $worker_name; ./$worker_name run $commands_name $lock_name $hostno $host_count $id_name 2>&1 > host-$hostno.log)", 1);
}

print STDERR "Finished launching SSHGrid workers.\n\n";
print STDERR "Your work subdir is:\t$subdir\n"; 
print STDERR "Find results on $hosts->[0] at:\t$workdir\n\n";
